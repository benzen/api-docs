===== Name
cljs.core/update-in

===== Signature
[m [k & ks] f]
[m [k & ks] f a]
[m [k & ks] f a b]
[m [k & ks] f a b c]
[m [k & ks] f a b c & args]

===== Description

"Updates" a value in a nested associative structure, where `ks` is a sequence of
keys and `f` is a function that will take the old value and any supplied
arguments and return the new value. Returns a new nested structure.

If any levels do not exist, hash-maps will be created.

===== Example

```
(update-in {:k1 {:k11 {:k111 "abc"}}} [:k1 :k11 :k111] (fn [x] "def"))
;; => {:k1 {:k11 {:k111 "def"}}}

(update-in {:k1 {:k11 {:k111 "abc"}}} [:k1 :k11 :k112] (fn [x] "def"))
;; => {:k1 {:k11 {:k111 "abc", :k112 "def"}}}

(update-in {:k2 {:k11 {:k111 "abc"}}} [:k1 :k11 :k111] (fn [x] "def"))
;; => {:k2 {:k11 {:k111 "abc"}}, :k1 {:k11 {:k111 "def"}}}
```

===== Related
cljs.core/assoc-in
cljs.core/get-in
