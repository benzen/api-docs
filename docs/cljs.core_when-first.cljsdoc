===== Name
cljs.core/when-first

===== Type
macro

===== Signature
[bindings & body]

===== Description

With `bindings` as `x`, `xs`, roughly the same as `(when (seq xs) (let [x (first
xs)] body))` but `xs` is evaluated only once.

`bindings` is a vector that describe binding name to first element of a sequence.
The `body` form is evaluated with theses bindings in the scope.

===== Example

```
(when-first [x [1 2 3 4]]
  (inc x))
;; => 1
```

===== Related

===== TODO

This needs better explanation + examples.
