===== Name
cljs.core/cond

===== Type
macro

===== Signature
[& clauses]

===== Description

`clauses` must be an even number of forms, ie: `(cond t1 e1, t2 e2, t3 e3)`.
Each test `t` is evaluated one at a time. If a test returns logical true, `cond`
evaluates and returns the corresponding expression `e` and does not evaluate any
of the other tests or expressions.

It is idiomatic to provide a default case as the last test pair using the
keyword `:else` (a keyword always evaluates to logical true).

`(cond)` returns nil.

===== Related
cljs.core/condp
cljs.core/case
cljs.core/if
