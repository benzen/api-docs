===== Name
cljs.core/cond->

===== Type
macro

===== Signature
[expr & clauses]

===== Description

Takes an expression and a set of test/form pairs. Threads `expr` (via `->`)
through each form for which the corresponding test expression is true.

Note that, unlike `cond` branching, `cond->` threading does not short circuit
after the first true test expression.

===== Related
cljs.core/->
cljs.core/->>
cljs.core/cond->>
cljs.core/cond

===== Example

```
(def a 12)

(cond-> a)
;;=> 12

(cond-> a
        (< 10) (println "it's less than 10")
        (= 12) (println "it's 12")
        (> 200) (println "It's greatter than 200"))
```
